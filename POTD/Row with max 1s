    class Solution {
    public int rowWithMax1s(int arr[][]) {
         // code here
        int max_row_index = -1;
        int max_1s_count = 0;
        
        for (int i = 0; i < arr.length; i++) {
            int count_1s = countOnes(arr[i]);
            if (count_1s > max_1s_count) {
                max_1s_count = count_1s;
                max_row_index = i;
            }
        }
        
        return max_row_index;
    }

    private int countOnes(int[] row) {
        int left = 0;
        int right = row.length - 1;
        
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (row[mid] == 1) {
                right = mid - 1; // move left to find the first 1
            } else {
                left = mid + 1;
            }
        }
        
        // left is now the index of the first 1, if any 1s exist
        return row.length - left;
    }
}
